{
  "version": 3,
  "file": "ngx-share-button.js",
  "sources": [
    "ng://@ngx-share/button/src/share-button.module.ts",
    "ng://@ngx-share/button/src/share-button.component.ts"
  ],
  "sourcesContent": [
    "import { NgModule, InjectionToken } from '@angular/core';\r\nimport { ShareModule, ShareButtons, ShareButtonsConfig, CONFIG } from '@ngx-share/core';\r\n\r\nimport { ShareButtonComponent } from './share-button.component';\r\n\r\nexport function ShareButtonsFactory(config: ShareButtonsConfig) {\r\n  return new ShareButtons(config);\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ShareButtonComponent\r\n  ],\r\n  imports: [\r\n    ShareModule\r\n  ],\r\n  exports: [\r\n    ShareModule,\r\n    ShareButtonComponent\r\n  ]\r\n})\r\nexport class ShareButtonModule {\r\n  static forRoot(config?: ShareButtonsConfig) {\r\n    return {\r\n      ngModule: ShareButtonModule,\r\n      providers: [\r\n        {provide: CONFIG, useValue: config},\r\n        {\r\n          provide: ShareButtons,\r\n          useFactory: ShareButtonsFactory,\r\n          deps: [CONFIG]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n\r\n",
    "import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  ViewChild,\r\n  HostBinding\r\n} from '@angular/core';\r\n\r\nimport { ShareButtons, ShareButtonDirective } from '@ngx-share/core';\r\n\r\n@Component({\r\n  selector: 'share-button',\r\n  template: `<button class=\"sb-wrapper\"\r\n        [shareButton]=\"button\"\r\n        [sbUrl]=\"url\"\r\n        [sbImage]=\"image\"\r\n        [sbTitle]=\"title\"\r\n        [sbDescription]=\"description\"\r\n        [sbTags]=\"tags\"\r\n        (sbOpened)=\"opened.emit($event)\"\r\n        (sbClosed)=\"closed.emit($event)\"\r\n        (sbCount)=\"onCount($event)\"\r\n        [class.sb-show-icon]=\"showIcon\"\r\n        [class.sb-show-text]=\"showText\"\r\n        [class.sb-show-count]=\"showCount && shareCount\"\r\n        [style.fontSize.px]=\"(1 + size/20) * 14\">\r\n\r\n  <div class=\"sb-inner\">\r\n\r\n    <!-- HIDE BUTTON'S ICON AND TEXT IF CUSTOM TEMPLATE IS USED -->\r\n\r\n    <div class=\"sb-content\">\r\n\r\n      <!-- BUTTON ICON -->\r\n      <div *ngIf=\"showIcon\" class=\"sb-icon\">\r\n        <i [class]=\"ref.prop.icon\" aria-hidden=\"true\"></i>\r\n      </div>\r\n\r\n      <!-- BUTTON TEXT -->\r\n      <div *ngIf=\"showText\" class=\"sb-text\">\r\n        {{ text || ref.prop.text }}\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <!-- BUTTON COUNT -->\r\n    <div *ngIf=\"showCount && shareCount\" class=\"sb-count\">\r\n      <span>{{ shareCount | nFormatter }}</span>\r\n    </div>\r\n\r\n  </div>\r\n</button>\r\n`,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ShareButtonComponent {\r\n\r\n  /** Share URL */\r\n  url: string;\r\n\r\n  /** Share count value */\r\n  shareCount: number;\r\n\r\n  /** Button name */\r\n  button: string;\r\n\r\n  @Input('button')\r\n  set createButton(button: string) {\r\n    this.shareCount = 0;\r\n    this.button = button;\r\n  }\r\n\r\n  /** on set share URL */\r\n  @Input('url')\r\n  set setUrl(newUrl: string) {\r\n    /** Reset share count when url changes */\r\n    this.shareCount = 0;\r\n    this.url = newUrl;\r\n  }\r\n\r\n  /** Share meta tags */\r\n  @Input() title: string;\r\n  @Input() description: string;\r\n  @Input() image: string;\r\n  @Input() tags: string;\r\n\r\n  /** Show button icon */\r\n  @Input() showIcon = true;\r\n\r\n  /** Show button text */\r\n  @Input() showText = false;\r\n\r\n  /** Button share count */\r\n  @Input() showCount = false;\r\n\r\n  /** Button custom text */\r\n  @Input() text: string;\r\n\r\n  /** Button size */\r\n  @Input() size = this.share.size;\r\n\r\n  /** Button theme */\r\n  @Input('theme')\r\n  set setTheme(theme: string) {\r\n    this.buttonClass = 'sb-button sb-' + theme;\r\n  }\r\n\r\n  /** Share count event */\r\n  @Output() count = new EventEmitter<number>();\r\n\r\n  /** Share dialog opened event */\r\n  @Output() opened = new EventEmitter<string>();\r\n\r\n  /** Share dialog closed event */\r\n  @Output() closed = new EventEmitter<string>();\r\n\r\n  /** Set theme as button class */\r\n  @HostBinding('class') buttonClass = 'sb-button sb-' + this.share.theme;\r\n\r\n  /** Share directive reference to display button icon and text */\r\n  @ViewChild(ShareButtonDirective) ref: ShareButtonDirective;\r\n\r\n  constructor(private share: ShareButtons) {\r\n  }\r\n\r\n  onCount(count) {\r\n    this.shareCount = count;\r\n    this.count.emit(count);\r\n  }\r\n\r\n}\r\n"
  ],
  "names": [],
  "mappings": "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"
}
