import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, NgModule, Output, ViewChild } from '@angular/core';
import { CONFIG, ShareButtonDirective, ShareButtons, ShareModule } from '@ngx-share/core';
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var ShareButtonComponent = (function () {
    /**
     * @param {?} share
     */
    function ShareButtonComponent(share) {
        this.share = share;
        /**
         * Show button icon
         */
        this.showIcon = true;
        /**
         * Show button text
         */
        this.showText = false;
        /**
         * Button share count
         */
        this.showCount = false;
        /**
         * Button size
         */
        this.size = this.share.size;
        /**
         * Share count event
         */
        this.count = new EventEmitter();
        /**
         * Share dialog opened event
         */
        this.opened = new EventEmitter();
        /**
         * Share dialog closed event
         */
        this.closed = new EventEmitter();
        /**
         * Set theme as button class
         */
        this.buttonClass = 'sb-button sb-' + this.share.theme;
    }
    Object.defineProperty(ShareButtonComponent.prototype, "createButton", {
        /**
         * @param {?} button
         * @return {?}
         */
        set: function (button) {
            this.shareCount = 0;
            this.button = button;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ShareButtonComponent.prototype, "setUrl", {
        /**
         * on set share URL
         * @param {?} newUrl
         * @return {?}
         */
        set: function (newUrl) {
            /** Reset share count when url changes */
            this.shareCount = 0;
            this.url = newUrl;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ShareButtonComponent.prototype, "setTheme", {
        /**
         * Button theme
         * @param {?} theme
         * @return {?}
         */
        set: function (theme) {
            this.buttonClass = 'sb-button sb-' + theme;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} count
     * @return {?}
     */
    ShareButtonComponent.prototype.onCount = function (count) {
        this.shareCount = count;
        this.count.emit(count);
    };
    return ShareButtonComponent;
}());
ShareButtonComponent.decorators = [
    { type: Component, args: [{
                selector: 'share-button',
                template: "<button class=\"sb-wrapper\"\n        [shareButton]=\"button\"\n        [sbUrl]=\"url\"\n        [sbImage]=\"image\"\n        [sbTitle]=\"title\"\n        [sbDescription]=\"description\"\n        [sbTags]=\"tags\"\n        (sbOpened)=\"opened.emit($event)\"\n        (sbClosed)=\"closed.emit($event)\"\n        (sbCount)=\"onCount($event)\"\n        [class.sb-show-icon]=\"showIcon\"\n        [class.sb-show-text]=\"showText\"\n        [class.sb-show-count]=\"showCount && shareCount\"\n        [style.fontSize.px]=\"(1 + size/20) * 14\">\n\n  <div class=\"sb-inner\">\n\n    <!-- HIDE BUTTON'S ICON AND TEXT IF CUSTOM TEMPLATE IS USED -->\n\n    <div class=\"sb-content\">\n\n      <!-- BUTTON ICON -->\n      <div *ngIf=\"showIcon\" class=\"sb-icon\">\n        <i [class]=\"ref.prop.icon\" aria-hidden=\"true\"></i>\n      </div>\n\n      <!-- BUTTON TEXT -->\n      <div *ngIf=\"showText\" class=\"sb-text\">\n        {{ text || ref.prop.text }}\n      </div>\n\n    </div>\n\n    <!-- BUTTON COUNT -->\n    <div *ngIf=\"showCount && shareCount\" class=\"sb-count\">\n      <span>{{ shareCount | nFormatter }}</span>\n    </div>\n\n  </div>\n</button>\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            },] },
];
/** @nocollapse */
ShareButtonComponent.ctorParameters = function () { return [
    { type: ShareButtons, },
]; };
ShareButtonComponent.propDecorators = {
    "createButton": [{ type: Input, args: ['button',] },],
    "setUrl": [{ type: Input, args: ['url',] },],
    "title": [{ type: Input },],
    "description": [{ type: Input },],
    "image": [{ type: Input },],
    "tags": [{ type: Input },],
    "showIcon": [{ type: Input },],
    "showText": [{ type: Input },],
    "showCount": [{ type: Input },],
    "text": [{ type: Input },],
    "size": [{ type: Input },],
    "setTheme": [{ type: Input, args: ['theme',] },],
    "count": [{ type: Output },],
    "opened": [{ type: Output },],
    "closed": [{ type: Output },],
    "buttonClass": [{ type: HostBinding, args: ['class',] },],
    "ref": [{ type: ViewChild, args: [ShareButtonDirective,] },],
};
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * @param {?} config
 * @return {?}
 */
function ShareButtonsFactory(config) {
    return new ShareButtons(config);
}
var ShareButtonModule = (function () {
    function ShareButtonModule() {
    }
    /**
     * @param {?=} config
     * @return {?}
     */
    ShareButtonModule.forRoot = function (config) {
        return {
            ngModule: ShareButtonModule,
            providers: [
                { provide: CONFIG, useValue: config },
                {
                    provide: ShareButtons,
                    useFactory: ShareButtonsFactory,
                    deps: [CONFIG]
                }
            ]
        };
    };
    return ShareButtonModule;
}());
ShareButtonModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    ShareButtonComponent
                ],
                imports: [
                    ShareModule
                ],
                exports: [
                    ShareModule,
                    ShareButtonComponent
                ]
            },] },
];
/** @nocollapse */
ShareButtonModule.ctorParameters = function () { return []; };
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * Generated bundle index. Do not edit.
 */
export { ShareButtonsFactory, ShareButtonModule, ShareButtonComponent };
//# sourceMappingURL=ngx-share-button.js.map
