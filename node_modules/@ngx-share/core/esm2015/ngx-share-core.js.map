{
  "version": 3,
  "file": "ngx-share-core.js",
  "sources": [
    "ng://@ngx-share/core/src/share.module.ts",
    "ng://@ngx-share/core/src/n-formatter.pipe.ts",
    "ng://@ngx-share/core/src/share-button.directive.ts",
    "ng://@ngx-share/core/src/share.service.ts",
    "ng://@ngx-share/core/src/share.prop.ts",
    "ng://@ngx-share/core/src/share.operators.ts",
    "ng://@ngx-share/core/src/share.tokens.ts"
  ],
  "sourcesContent": [
    "import { NgModule, InjectionToken } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ShareButtons } from './share.service';\r\nimport { ShareButtonDirective } from './share-button.directive';\r\nimport { NFormatterPipe } from './n-formatter.pipe';\r\nimport { ShareButtonsConfig } from './share.models';\r\nimport { CONFIG } from './share.tokens';\r\n\r\nexport function ShareButtonsFactory(config: ShareButtonsConfig) {\r\n  return new ShareButtons(config);\r\n}\r\n\r\n/** TODO: remove CommonModule */\r\n@NgModule({\r\n  declarations: [\r\n    ShareButtonDirective,\r\n    NFormatterPipe\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    ShareButtonDirective,\r\n    NFormatterPipe\r\n  ]\r\n})\r\nexport class ShareModule {\r\n  static forRoot(config?: ShareButtonsConfig) {\r\n    return {\r\n      ngModule: ShareModule,\r\n      providers: [\r\n        {provide: CONFIG, useValue: config},\r\n        {\r\n          provide: ShareButtons,\r\n          useFactory: ShareButtonsFactory,\r\n          deps: [CONFIG]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n\r\n",
    "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'nFormatter'\r\n})\r\nexport class NFormatterPipe implements PipeTransform {\r\n\r\n  transform(num: any, digits?: any): any {\r\n\r\n    if (typeof num !== 'number') {\r\n      num = 1;\r\n    }\r\n\r\n    return nFormatter(num, digits);\r\n  }\r\n\r\n}\r\n\r\n/** Change share counts to a readable number */\r\nexport const nFormatter = (num: number, digits: number) => {\r\n\r\n  const si = [\r\n    {value: 1E18, symbol: 'E'},\r\n    {value: 1E15, symbol: 'P'},\r\n    {value: 1E12, symbol: 'T'},\r\n    {value: 1E9, symbol: 'G'},\r\n    {value: 1E6, symbol: 'M'},\r\n    {value: 1E3, symbol: 'K'}\r\n  ], rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\r\n\r\n  for (let i = 0; i < si.length; i++) {\r\n    if (num >= si[i].value) {\r\n      return (num / si[i].value).toFixed(digits).replace(rx, '$1') + si[i].symbol;\r\n    }\r\n  }\r\n  return num.toFixed(digits).replace(rx, '$1');\r\n};\r\n",
    "import {\r\n  Directive,\r\n  Input,\r\n  Output,\r\n  HostListener,\r\n  EventEmitter,\r\n  ElementRef,\r\n  Renderer2,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { catchError } from 'rxjs/operators/catchError';\r\nimport { take } from 'rxjs/operators/take';\r\nimport { tap } from 'rxjs/operators/tap';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { empty } from 'rxjs/observable/empty';\r\nimport { of } from 'rxjs/observable/of';\r\n\r\nimport { ShareButtons } from './share.service';\r\nimport { IShareButton, ShareButtonRef } from './share.models';\r\n\r\n/** Google analytics ref */\r\ndeclare const ga: Function;\r\ndeclare const global: any;\r\ndeclare const window: any;\r\n\r\n@Directive({\r\n  selector: '[shareButton]'\r\n})\r\nexport class ShareButtonDirective {\r\n\r\n  /** A ref for window object that works on SSR */\r\n  window: Window;\r\n\r\n  /** Button properties */\r\n  prop: IShareButton;\r\n\r\n  /** The validated share URL */\r\n  url: string;\r\n\r\n  /** Button class - used to remove previous class when the button type is changed */\r\n  buttonClass: string;\r\n\r\n  /** Meta tags inputs - initialized from the global options */\r\n  @Input() sbTitle = this.shareService.title;\r\n  @Input() sbDescription = this.shareService.description;\r\n  @Input() sbImage = this.shareService.image;\r\n  @Input() sbTags = this.shareService.tags;\r\n\r\n  /** Create share button  */\r\n  @Input('shareButton')\r\n  set setButton(buttonName: string) {\r\n\r\n    /** Create a new button of type <buttonName> */\r\n    const button = {...this.shareService.prop[buttonName]};\r\n\r\n    if (button) {\r\n\r\n      /** Set share button */\r\n      this.prop = button;\r\n\r\n      /** Remove previous button class */\r\n      this.renderer.removeClass(this.el.nativeElement, 'sb-' + this.buttonClass);\r\n\r\n      /** Add new button class */\r\n      this.renderer.addClass(this.el.nativeElement, 'sb-' + button.type);\r\n\r\n      /** Keep a copy of the class for future replacement */\r\n      this.buttonClass = button.type;\r\n\r\n      /** Get link's shared count */\r\n      this.emitCount();\r\n    } else {\r\n      throw new Error(`[ShareButtons]: The share button '${buttonName}' does not exist!`);\r\n    }\r\n  }\r\n\r\n  /** Set share URL */\r\n  @Input()\r\n  set sbUrl(newUrl: string) {\r\n\r\n    /** Check if new URL is equal the current URL */\r\n    if (newUrl !== this.url) {\r\n      this.url = this.getValidURL(newUrl);\r\n      this.emitCount();\r\n    }\r\n  }\r\n\r\n  /** Share count event */\r\n  @Output() sbCount = new EventEmitter<number>();\r\n\r\n  /** Share dialog opened event */\r\n  @Output() sbOpened = new EventEmitter<string>();\r\n\r\n  /** Share dialog closed event */\r\n  @Output() sbClosed = new EventEmitter<string>();\r\n\r\n  constructor(private shareService: ShareButtons,\r\n              private http: HttpClient,\r\n              public renderer: Renderer2,\r\n              public cd: ChangeDetectorRef,\r\n              private el: ElementRef) {\r\n    this.window = window || global;\r\n  }\r\n\r\n  /**\r\n   * Share link on element click\r\n   */\r\n  @HostListener('click')\r\n  onClick() {\r\n    /** Set user did not set the url using [sbUrl], use window URL */\r\n    if (!this.url) {\r\n      this.url = encodeURIComponent(this.window.location.href);\r\n    }\r\n\r\n    /** Emit opened share button type */\r\n    this.sbOpened.emit(this.prop.type);\r\n\r\n    const ref: ShareButtonRef = {\r\n      url: this.url,\r\n      cd: this.cd,\r\n      renderer: this.renderer,\r\n      window: this.window,\r\n      prop: this.prop,\r\n      el: this.el.nativeElement,\r\n      os: this.shareService.os,\r\n      metaTags: {\r\n        title: this.sbTitle,\r\n        description: this.sbDescription,\r\n        image: this.sbImage,\r\n        tags: this.sbTags,\r\n        via: this.shareService.twitterAccount,\r\n      }\r\n    };\r\n\r\n    /** Share the link */\r\n    of(ref).pipe(\r\n      ...this.prop.share.operators,\r\n      tap((sharerURL: string) => this.share(sharerURL)),\r\n      take(1)\r\n    ).subscribe();\r\n  }\r\n\r\n  /**\r\n   * Emit share count\r\n   */\r\n  emitCount() {\r\n    /** Only if share count has observers & the button has support for share count */\r\n    if (this.url && this.sbCount.observers.length && this.prop.count) {\r\n\r\n      /** Emit share count to (sbCount) Output */\r\n      this.count(this.url).subscribe((count: number) => this.sbCount.emit(count));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Open sharing window\r\n   * @param url - Share URL\r\n   */\r\n  share(url: string) {\r\n    let popUp;\r\n    if (url) {\r\n\r\n      /** GA tracking */\r\n      if (this.shareService.gaTracking && typeof ga !== 'undefined') {\r\n        ga('send', 'social', this.prop.type, 'click', this.url);\r\n      }\r\n\r\n      popUp = this.window.open(url, 'newwindow', this.shareService.windowSize);\r\n    }\r\n\r\n    /** If dialog closed event has subscribers, emit closed dialog type */\r\n    if (this.sbClosed.observers.length && popUp) {\r\n      const pollTimer = this.window.setInterval(() => {\r\n        if (popUp.closed) {\r\n          this.window.clearInterval(pollTimer);\r\n          this.sbClosed.emit(this.prop.type);\r\n        }\r\n      }, 200);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get link share count\r\n   * @param url - Share URL\r\n   * @returns Share count\r\n   */\r\n  count(url: string): Observable<any> {\r\n\r\n    if (this.prop.count.request === 'jsonp') {\r\n\r\n      return this.http.jsonp<any>(this.prop.count.url + url, 'callback').pipe(\r\n        ...this.prop.count.operators,\r\n        catchError(() => empty()),\r\n      );\r\n    } else {\r\n\r\n      return this.http.get<any>(this.prop.count.url + url, this.prop.count.args).pipe(\r\n        ...this.prop.count.operators,\r\n        catchError(() => empty())\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get a valid URL for sharing\r\n   * @param url - URL to validate\r\n   * @returns Sharable URL\r\n   */\r\n  private getValidURL(url: string) {\r\n\r\n    if (url) {\r\n      const r = /(http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\r\n\r\n      if (r.test(url)) {\r\n        return encodeURIComponent(url);\r\n      }\r\n      console.warn(`[ShareButtons]: Sharing link '${url}' is invalid!`);\r\n    }\r\n    /** fallback to page current URL */\r\n    return encodeURIComponent(this.window.location.href);\r\n  }\r\n\r\n}\r\n",
    "import { Inject, Injectable } from '@angular/core';\r\nimport { IShareButton, IShareButtons, ShareButtonsConfig, ShareButtonsOptions } from './share.models';\r\nimport { CONFIG } from './share.tokens';\r\nimport { shareButtonsProp } from './share.prop';\r\n\r\ndeclare const global: any;\r\ndeclare const window: any;\r\ndeclare const navigator: any;\r\n\r\n@Injectable()\r\nexport class ShareButtons {\r\n\r\n  /** List of share buttons */\r\n  allButtons: string[];\r\n\r\n  /** Default options */\r\n  options: ShareButtonsOptions;\r\n\r\n  /** Default properties */\r\n  prop: IShareButtons;\r\n\r\n  /** User OS */\r\n  os: string;\r\n\r\n  constructor(@Inject(CONFIG) config: ShareButtonsConfig) {\r\n\r\n    /** Set buttons properties */\r\n    this.prop = shareButtonsProp;\r\n\r\n    /** Set buttons list */\r\n    this.allButtons = Object.keys(this.prop);\r\n\r\n    /** Set default options */\r\n    this.options = {\r\n      theme: 'default',\r\n      include: this.allButtons,\r\n      exclude: [],\r\n      size: 0,\r\n      title: null,\r\n      image: null,\r\n      description: null,\r\n      tags: null,\r\n      gaTracking: false,\r\n      twitterAccount: null,\r\n      windowWidth: 800,\r\n      windowHeight: 500\r\n    };\r\n\r\n    if (config) {\r\n      /** Override global options with user's preference */\r\n      this.options = mergeDeep(this.options, config.options);\r\n      this.prop = mergeDeep(this.prop, config.prop);\r\n    }\r\n\r\n    /** Get user browser info */\r\n    this.os = getOS();\r\n  }\r\n\r\n  get twitterAccount() {\r\n    return this.options.twitterAccount;\r\n  }\r\n\r\n  /**\r\n   * Get wanted buttons\r\n   */\r\n  get buttons() {\r\n    if (!this.options.exclude.length) {\r\n      return this.options.include;\r\n    }\r\n    return this.options.include.filter((btn) => this.options.exclude.indexOf(btn) < 0);\r\n  }\r\n\r\n  get theme() {\r\n    return this.options.theme;\r\n  }\r\n\r\n  get windowSize() {\r\n    return `width=${this.options.windowWidth}, height=${this.options.windowHeight}`;\r\n  }\r\n\r\n  get title() {\r\n    return this.options.title;\r\n  }\r\n\r\n  get description() {\r\n    return this.options.description;\r\n  }\r\n\r\n  get image() {\r\n    return this.options.image;\r\n  }\r\n\r\n  get tags() {\r\n    return this.options.tags;\r\n  }\r\n\r\n  get gaTracking() {\r\n    return this.options.gaTracking;\r\n  }\r\n\r\n  get size() {\r\n    return this.options.size;\r\n  }\r\n\r\n  registerButton(name: string, data: IShareButton) {\r\n    this.prop = {...shareButtonsProp, ...{[name]: data}};\r\n    this.allButtons = Object.keys(this.prop);\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Determine the mobile operating system.\r\n * This function returns one of 'iOS', 'Android', 'Windows Phone', or 'unknown'.\r\n */\r\nfunction getOS() {\r\n  const userAgent = (navigator || global).userAgent || (navigator || global).vendor || (window || global).opera;\r\n\r\n  if (/android/i.test(userAgent)) {\r\n    return 'android';\r\n  }\r\n\r\n  // iOS detection from: http://stackoverflow.com/a/9039885/177710\r\n  if (/iPad|iPhone|iPod/.test(userAgent) && !(window || global).MSStream) {\r\n    return 'ios';\r\n  }\r\n\r\n  return 'desktop';\r\n}\r\n\r\n/**\r\n * Simple object check.\r\n */\r\nfunction isObject(item) {\r\n  return (item && typeof item === 'object' && !Array.isArray(item));\r\n}\r\n\r\n/**\r\n * Deep merge two objects.\r\n */\r\nfunction mergeDeep(target, ...sources) {\r\n  if (!sources.length) {\r\n    return target;\r\n  }\r\n  const source = sources.shift();\r\n\r\n  if (isObject(target) && isObject(source)) {\r\n    for (const key in source) {\r\n      if (isObject(source[key])) {\r\n        if (!target[key]) {\r\n          Object.assign(target, {[key]: {}});\r\n        }\r\n        mergeDeep(target[key], source[key]);\r\n      } else {\r\n        Object.assign(target, {[key]: source[key]});\r\n      }\r\n    }\r\n  }\r\n\r\n  return mergeDeep(target, ...sources);\r\n}\r\n",
    "import { map } from 'rxjs/operators/map';\r\nimport { noneOperator, metaTagsOperator, printOperator, pinterestOperator, copyOperators } from './share.operators';\r\nimport { IShareButtons } from './share.models';\r\n\r\nexport const shareButtonsProp: IShareButtons = {\r\n  facebook: {\r\n    type: 'facebook',\r\n    text: 'Facebook',\r\n    icon: 'fa fa-facebook',\r\n    color: '#3b5998',\r\n    share: {\r\n      desktop: 'https://www.facebook.com/sharer/sharer.php?u=',\r\n      android: 'https://www.facebook.com/sharer/sharer.php?u=',\r\n      ios: 'https://www.facebook.com/sharer/sharer.php?u=',\r\n      operators: [noneOperator]\r\n    },\r\n    count: {\r\n      request: 'http',\r\n      url: 'https://graph.facebook.com?id=',\r\n      operators: [\r\n        map((res: any) => +res.share.share_count)\r\n      ]\r\n    }\r\n  },\r\n  twitter: {\r\n    type: 'twitter',\r\n    text: 'Twitter',\r\n    icon: 'fa fa-twitter',\r\n    color: '#00acee',\r\n    share: {\r\n      desktop: 'https://twitter.com/intent/tweet?url=',\r\n      android: 'https://twitter.com/intent/tweet?url=',\r\n      ios: 'https://twitter.com/intent/tweet?url=',\r\n      operators: [\r\n        metaTagsOperator\r\n      ],\r\n      metaTags: {\r\n        description: 'text',\r\n        tags: 'hashtags',\r\n        via: 'via'\r\n      }\r\n    }\r\n  },\r\n  google: {\r\n    type: 'google',\r\n    text: 'Google+',\r\n    icon: 'fa fa-google-plus',\r\n    color: '#DB4437',\r\n    share: {\r\n      desktop: 'https://plus.google.com/share?url=',\r\n      android: 'https://plus.google.com/share?url=',\r\n      ios: 'https://plus.google.com/share?url=',\r\n      operators: [noneOperator],\r\n    }\r\n  },\r\n  linkedin: {\r\n    type: 'linkedin',\r\n    text: 'LinkedIn',\r\n    icon: 'fa fa-linkedin',\r\n    color: '#006fa6',\r\n    share: {\r\n      desktop: 'http://www.linkedin.com/shareArticle?url=',\r\n      android: 'http://www.linkedin.com/shareArticle?url=',\r\n      ios: 'http://www.linkedin.com/shareArticle?url=',\r\n      operators: [metaTagsOperator],\r\n      metaTags: {\r\n        title: 'title',\r\n        description: 'summary'\r\n      },\r\n    },\r\n    count: {\r\n      request: 'jsonp',\r\n      url: 'https://www.linkedin.com/countserv/count/share?url=',\r\n      operators: [\r\n        map((res: any) => +res.count)\r\n      ]\r\n    }\r\n  },\r\n  pinterest: {\r\n    type: 'pinterest',\r\n    text: 'Pinterest',\r\n    icon: 'fa fa-pinterest-p',\r\n    color: '#BD091D',\r\n    share: {\r\n      desktop: 'https://in.pinterest.com/pin/create/button/?url=',\r\n      android: 'https://in.pinterest.com/pin/create/button/?url=',\r\n      ios: 'https://in.pinterest.com/pin/create/button/?url=',\r\n      operators: [\r\n        metaTagsOperator,\r\n        pinterestOperator\r\n      ],\r\n      metaTags: {\r\n        description: 'description',\r\n        image: 'media'\r\n      }\r\n    },\r\n    count: {\r\n      request: 'http',\r\n      url: 'https://api.pinterest.com/v1/urls/count.json?url=',\r\n      args: {responseType: 'text'},\r\n      operators: [\r\n        map((text: string) => JSON.parse(text.replace(/^receiveCount\\((.*)\\)/, '$1'))),\r\n        map((res: any) => +res.count)\r\n      ]\r\n    }\r\n  },\r\n  reddit: {\r\n    type: 'reddit',\r\n    text: 'Reddit',\r\n    icon: 'fa fa-reddit-alien',\r\n    color: '#FF4006',\r\n    share: {\r\n      desktop: 'http://www.reddit.com/submit?url=',\r\n      android: 'http://www.reddit.com/submit?url=',\r\n      ios: 'http://www.reddit.com/submit?url=',\r\n      operators: [\r\n        metaTagsOperator\r\n      ],\r\n      metaTags: {\r\n        title: 'title'\r\n      },\r\n    },\r\n    count: {\r\n      request: 'http',\r\n      url: 'https://buttons.reddit.com/button_info.json?url=',\r\n      operators: [\r\n        map((res: any) => +res.data.children[0].data.score)\r\n      ]\r\n    },\r\n  },\r\n  tumblr: {\r\n    type: 'tumblr',\r\n    text: 'Tumblr',\r\n    icon: 'fa fa-tumblr',\r\n    color: '#36465D',\r\n    share: {\r\n      desktop: 'http://tumblr.com/widgets/share/tool?canonicalUrl=',\r\n      android: 'http://tumblr.com/widgets/share/tool?canonicalUrl=',\r\n      ios: 'http://tumblr.com/widgets/share/tool?canonicalUrl=',\r\n      operators: [\r\n        metaTagsOperator\r\n      ],\r\n      metaTags: {\r\n        description: 'caption',\r\n        tags: 'tags'\r\n      }\r\n    },\r\n    count: {\r\n      request: 'jsonp',\r\n      url: 'https://api.tumblr.com/v2/share/stats?url=',\r\n      operators: [\r\n        map((res: any) => +res.response.note_count)\r\n      ]\r\n    }\r\n  },\r\n  whatsapp: {\r\n    type: 'whatsapp',\r\n    text: 'WhatsApp',\r\n    icon: 'fa fa-whatsapp',\r\n    color: '#25D366',\r\n    share: {\r\n      desktop: 'https://web.whatsapp.com/send?',\r\n      android: 'whatsapp://send?',\r\n      ios: 'whatsapp://send?',\r\n      operators: [metaTagsOperator],\r\n      metaTags: {\r\n        description: 'text'\r\n      }\r\n    }\r\n  },\r\n  telegram: {\r\n    type: 'telegram',\r\n    text: 'Telegram',\r\n    icon: 'fa fa-send',\r\n    color: '#0088cc',\r\n    share: {\r\n      desktop: 'https://t.me/share/url?url=',\r\n      android: 'https://t.me/share/url?url=',\r\n      ios: 'https://t.me/share/url?url=',\r\n      operators: [metaTagsOperator],\r\n      metaTags: {\r\n        description: 'text'\r\n      }\r\n    }\r\n  },\r\n  vk: {\r\n    type: 'vk',\r\n    text: 'VKontakte',\r\n    icon: 'fa fa-vk',\r\n    color: '#4C75A3',\r\n    share: {\r\n      desktop: 'http://vk.com/share.php?url=',\r\n      android: 'http://vk.com/share.php?url=',\r\n      ios: 'http://vk.com/share.php?url=',\r\n      operators: [noneOperator]\r\n    }\r\n  },\r\n  stumble: {\r\n    type: 'stumble',\r\n    text: 'Stumble',\r\n    icon: 'fa fa-stumbleupon',\r\n    color: '#eb4924',\r\n    share: {\r\n      desktop: 'http://www.stumbleupon.com/submit?url=',\r\n      android: 'http://www.stumbleupon.com/submit?url=',\r\n      ios: 'http://www.stumbleupon.com/submit?url=',\r\n      operators: [noneOperator],\r\n    }\r\n  },\r\n  email: {\r\n    type: 'email',\r\n    text: 'Email',\r\n    icon: 'fa fa-envelope',\r\n    color: '#32A1A3',\r\n    share: {\r\n      desktop: 'mailto:?',\r\n      android: 'mailto:?',\r\n      ios: 'mailto:?',\r\n      operators: [metaTagsOperator],\r\n      metaTags: {\r\n        title: 'subject',\r\n        description: 'body'\r\n      }\r\n    }\r\n  },\r\n  copy: {\r\n    type: 'copy',\r\n    text: 'Copy link',\r\n    successText: 'Copied',\r\n    successIcon: 'fa fa-check',\r\n    failText: 'Error',\r\n    failIcon: 'fa fa-exclamation',\r\n    icon: 'fa fa-link',\r\n    color: '#607D8B',\r\n    share: {\r\n      operators: copyOperators\r\n    }\r\n  },\r\n  print: {\r\n    type: 'print',\r\n    text: 'Print',\r\n    icon: 'fa fa-print',\r\n    color: 'brown',\r\n    share: {\r\n      operators: [printOperator]\r\n    }\r\n  }\r\n};\r\n",
    "import { map } from 'rxjs/operators/map';\r\nimport { delay } from 'rxjs/operators/delay';\r\nimport { ShareButtonRef } from './share.models';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n/**\r\n * None operator - just return the sharer URL\r\n */\r\nexport const noneOperator = map((ref: ShareButtonRef) => ref.prop.share[ref.os] + ref.url);\r\n\r\n/**\r\n * Meta tags operator - Serialize meta tags in the sharer URL\r\n */\r\nexport const metaTagsOperator = map((ref: ShareButtonRef) => {\r\n\r\n  /** Social network supported meta tags */\r\n  const metaTags = ref.prop.share.metaTags;\r\n\r\n  /** User meta tags values */\r\n  const metaTagsValues = ref.metaTags;\r\n\r\n  /** Social network sharer URL */\r\n  const SharerURL = ref.prop.share[ref.os];\r\n\r\n  /** User share link */\r\n  let link = ref.url;\r\n\r\n  /** Loop over meta tags */\r\n  if (metaTags) {\r\n    Object.keys(metaTags).map((key) => {\r\n      if (metaTagsValues[key]) {\r\n        link += `&${metaTags[key]}=${encodeURIComponent(metaTagsValues[key])}`;\r\n      }\r\n    });\r\n  }\r\n  return SharerURL + link;\r\n});\r\n\r\n/**\r\n * Print button operator\r\n */\r\nexport const printOperator = map((ref: ShareButtonRef) => ref.window.print());\r\n\r\n/**\r\n * Pinterest operator - Since Pinterest requires the description and image meta tags,\r\n * this function checks if the meta tags are presented, if not it falls back to page meta tags\r\n * This should placed after the metaTagsOperator\r\n */\r\nexport const pinterestOperator = map((url: string) => {\r\n  if (!url.includes('&description')) {\r\n    /** If user didn't add description, get it from the OG meta tag */\r\n    const ogDescription: Element = document.querySelector(`meta[property=\"og:description\"]`);\r\n    if (ogDescription) {\r\n      url += '&description=' + ogDescription.getAttribute('content');\r\n    } else {\r\n      console.warn(`[ShareButtons]: You didn't set the description text for Pinterest button`);\r\n    }\r\n  }\r\n  if (!url.includes('&media')) {\r\n    const ogImage: Element = document.querySelector(`meta[property=\"og:image\"]`);\r\n    if (ogImage) {\r\n      url += '&media=' + ogImage.getAttribute('content');\r\n    } else {\r\n      console.warn(`[ShareButtons]: You didn't set the image URL for Pinterest button`);\r\n    }\r\n  }\r\n  return url;\r\n});\r\n\r\n/**\r\n * Copy button operator - to copy link to clipboard\r\n */\r\nexport const copyOperators = [\r\n  map((ref: ShareButtonRef) => {\r\n\r\n    /** Disable button click */\r\n    ref.renderer.setStyle(ref.el, 'pointer-events', 'none');\r\n\r\n    ref.temp = {text: ref.prop.text, icon: ref.prop.icon};\r\n    const link = decodeURIComponent(ref.url);\r\n\r\n    /** Create a hidden textarea element */\r\n    const textArea = ref.renderer.createElement('textarea');\r\n    textArea.style.position = 'fixed';\r\n    textArea.style.top = 0;\r\n    textArea.style.left = 0;\r\n    textArea.style.width = '2em';\r\n    textArea.style.height = '2em';\r\n    textArea.style.padding = 0;\r\n    textArea.style.border = 'none';\r\n    textArea.style.outline = 'none';\r\n    textArea.style.boxShadow = 'none';\r\n    textArea.style.background = 'transparent';\r\n    textArea.value = link;\r\n\r\n    ref.renderer.appendChild(ref.el, textArea);\r\n\r\n    /** highlight and copy the text */\r\n    textArea.select();\r\n    document.execCommand('copy');\r\n\r\n    ref.renderer.removeChild(ref.el, textArea);\r\n\r\n    /** Set success text and icon on button */\r\n    ref.prop.text = ref.prop.successText;\r\n    ref.prop.icon = ref.prop.successIcon;\r\n    ref.cd.markForCheck();\r\n\r\n    return ref;\r\n  }, (ref: ShareButtonRef) => {\r\n\r\n    /** Set error text and icon on button */\r\n    ref.prop.text = ref.prop.failText;\r\n    ref.prop.icon = ref.prop.failIcon;\r\n    ref.cd.markForCheck();\r\n    console.warn('[ShareButtons]: Print button could not copy URL to clipboard');\r\n  }),\r\n  delay(2000),\r\n  map((ref: ShareButtonRef) => {\r\n\r\n    /** Enable button click */\r\n    ref.renderer.setStyle(ref.el, 'pointer-events', 'auto');\r\n\r\n    /** Set the default text and icon back */\r\n    ref.prop.text = ref.temp.text;\r\n    ref.prop.icon = ref.temp.icon;\r\n    ref.cd.markForCheck();\r\n  })\r\n];\r\n",
    "import { InjectionToken } from '@angular/core';\r\nimport { ShareButtonsConfig } from './share.models';\r\n\r\nexport const CONFIG = new InjectionToken<ShareButtonsConfig>('CONFIG');\r\n"
  ],
  "names": [
    "catchError",
    "empty",
    "of",
    "tap",
    "take",
    "http",
    "map",
    "delay"
  ],
  "mappings": "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"
}
